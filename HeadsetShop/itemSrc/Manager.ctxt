#BlueJ class context
comment0.target=Manager
comment0.text=\r\n\ This\ class\ puts\ everything\ together,\ it\ is\ the\ applications\ entry\ point\r\n\ @author\ (Mohammed\ Fuad\ Gurun)\r\n\ @version\ 1.0\r\n\ @since\ \ \ 17/12/2021\r\n
comment1.params=
comment1.target=Manager()
comment1.text=\r\n\ This\ method\ is\ an\ empty\ constructor,\ initialising\ a\ list\ of\ queue\ and\ a\ list\ of\ headset\r\n
comment10.params=order\ headset
comment10.target=void\ processedOrders(CustInQueue,\ Headset)
comment10.text=\r\n\ This\ method\ is\ responsible\ for\ handling\ and\ storing\ PROCESSED\ ORDERS\r\n\ @param\ order\ is\ the\ current\ order\r\n\ @param\ headset\ is\ the\ headset\ which\ is\ ID\ is\ in\ the\ order\ parameter\r\n\ @return\ Nothing\r\n
comment11.params=order\ headset
comment11.target=void\ unprocessedOrders(CustInQueue,\ Headset)
comment11.text=\r\n\ This\ method\ is\ responsible\ for\ handling\ and\ storing\ FAILED\ ORDERS\r\n\ @param\ order\ is\ the\ current\ order\r\n\ @param\ headset\ is\ the\ headset\ which\ is\ ID\ is\ in\ the\ order\ parameter\r\n\ @return\ Nothing\r\n
comment12.params=
comment12.target=Worker\ newWorker()
comment12.text=\r\n\ This\ method\ is\ instantiating\ a\ new\ worker\ object,\ \r\n\ passing\ list\ of\ headset,\ list\ of\ orders,\ speed\ and\ the\ number\ of\ the\ employee\r\n\ @return\ newWorker\r\n
comment2.params=custQ\ allHeadsets
comment2.target=Manager(QueueOfCusts,\ HeadsetMap)
comment2.text=\r\n\ This\ method\ is\ an\ overloaded\ constructor\r\n\ @param\ custQ\ This\ parameter\ is\ referring\ to\ the\ list\ of\ orders\r\n\ @param\ allHeadsets\ This\ parameter\ is\ referring\ to\ list\ of\ headset\r\n
comment3.params=
comment3.target=QueueOfCusts\ getOrderList()
comment3.text=\r\n\ This\ method\ is\ responsible\ for\ providing\ a\ list\ orders\r\n\ @return\ custQ,\ a\ list\ of\ orders\r\n
comment4.params=
comment4.target=HeadsetMap\ getHeadsetList()
comment4.text=\r\n\ This\ method\ is\ responsible\ for\ providing\ a\ list\ headsets\r\n\ @return\ allHeadsets,\ a\ list\ of\ headsets\r\n
comment5.params=
comment5.target=void\ initialiseData()
comment5.text=\r\n\ this\ method\ is\ responsbile\ for\ reading\ relevant\ files\ such\ as\r\n\ item/headsetfile,\ customerfile\r\n\ also,\ initialise\ a\ number\ of\ customers\ to\ be\ in\ the\ queue,\ e.g.,\ 6\ customers\r\n\ perform\ a\ simple\ println\ of\ all\ Headset\ details,\ and\ queueing\ customers\ details\r\n\ Logic\ of\ initialisation\:\r\n\ 1)\ read\ customer\ file\r\n\ 2)\ read\ items/Headset\ file\r\n\ 3)\ put\ 6\ or\ so\ customers\ in\ the\ queue\ by\:\r\n\ 3.1)\ use\ for\ loop\ to\ repeat\ 6\ times\r\n\ 3.2)\ declare\ a\ reference\ of\ CustInQue\ and\ put\ in\ it\ the\ ith\ value\ of\ custQ.\r\n\ 3.3)\ Now\ set\ the\ CustIQue\ reference\ to\ be\ in\ inQueue\ (setInQueue()).\r\n\ 4)\ print\ all\ Headset\ details\ to\ the\ console\r\n\ 5)\ print\ all\ queing\ customers\ to\ the\ console\r\n\ @return\ Nothing\r\n
comment6.params=
comment6.target=void\ readCustFile()
comment6.text=\r\n\ a\ method\ to\ read\ cust.csv\ file.\r\n\ use\ an\ object\ of\ Scanner\ to\ read\ the\ file\r\n\ You\ will\ need\ to\ use\ the\ split\ method\ of\ String\ class\ to\ read\ input\ appropriately\r\n\ catch\ appropriate\ exceptions\r\n\ @return\ Nothing\r\n
comment7.params=inputLine
comment7.target=void\ processCustLine(java.lang.String)
comment7.text=\r\n\ this\ is\ to\ do\ the\ nitty\ gritty\ business\ of\ reading\ the\ file\ by\ splitting\ content\r\n\ based\ on\ used\ delimeter.\r\n\ its\ a\ private\ method\ because\ it\ is\ called\ in\ the\ readCustFile\ above.\r\n\ You\ can\ keep\ it,\ that\ way\ or\ do\ all\ the\ work\ in\ the\ method\ above\r\n\ once\ splitting\ has\ happened,\ identify\ which\ one\ is\ id,\ and\ which\ one\ is\ pid.\r\n\ use\ the\ id\ and\ pid\ to\ create\ an\ object\ of\ CustInque\r\n\ Add\ the\ object\ of\ CustinQue\ to\ custQ\r\n\ @param\ inputLine\ which\ is\ details\ of\ an\ order\r\n\ @return\ Nothing\r\n
comment8.params=
comment8.target=void\ readHeadsetFile()
comment8.text=\r\n\ similar\ functionality\ as\ readcustomer\ file\r\n\ this\ method\ is\ reading\ headset\ file\r\n\ @return\ Nothing\r\n
comment9.params=inputLine
comment9.target=void\ processHeadsetLine(java.lang.String)
comment9.text=\r\n\ similar\ to\ processcustline\r\n\ simply,\ breakdown\ file\ content\ into\ appropriate\ data\ \r\n\ items\ using\ String's\ split()\ method\ \r\n\ once\ you\ obtain\ all\ Headset\ details,\ create\ a\ Headset\ object,\ and\ add\ \r\n\ it\ to\ allHeadsets\ collection+\r\n\ @return\ Nothing\r\n
numComments=13
