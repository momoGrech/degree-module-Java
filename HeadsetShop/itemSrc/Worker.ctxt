#BlueJ class context
comment0.target=Worker
comment0.text=\r\n\ Class\ worker\ is\ responsible\ for\ processing\ orders\ in\ the\ warehouse\r\n\ @author\ (Mohammed\ Fuad\ Gurun)\r\n\ @version\ 1.0\r\n\ @since\ \ \ 14/12/2021\r\n
comment1.params=allCusts\ allHeadsets\ speed\ numWorker
comment1.target=Worker(QueueOfCusts,\ HeadsetMap,\ int,\ int)
comment1.text=\r\n\ This\ method\ is\ an\ overloaded\ constructor\r\n\ @param\ allCusts\ This\ parameter\ is\ referring\ to\ the\ list\ of\ orders\r\n\ @param\ allHeadsets\ This\ parameter\ is\ referring\ to\ list\ of\ headset\r\n\ @param\ speed\ This\ parameter\ is\ referring\ to\ the\ speed\ needed\ for\ a\ worker\ to\ prcoess\ an\ order(not\ being\ implemented\ for\ the\ assignment)\r\n\ @param\ numWorker\ This\ parameter\ is\ referring\ to\ the\ employee/worker\ number\ \r\n
comment10.params=
comment10.target=java.lang.String\ processOneCustomer()
comment10.text=\r\n\ this\ method\ is\ for\ processing\ one\ customer's\ order\r\n\ @return\ a\ string\ of\ orderResult.\ This\ orderResult\ will\ eventually\ be\ used\ in\ the\ GUI.\r\n\ the\ logic\ should\ be\ as\ follows\:\r\n\ 1)\ obtain\ the\ current\ customer\ using\ the\ private\ method\ getNext()\ above.\r\n\ 2)\ check\ that\ currentcustomer's\ value\ is\ not\ null\r\n\ 3)\ obtain\ the\ current\ customers\ Headset\ id\ (hid),\ it\ is\ a\ string\r\n\ 4)\ declare\ a\ Headset\ object,\ obtain\ it\ from\ the\ collection\ of\ Headsets\ that\ has\ the\ same\ hid\r\n\ as\ 4\ above\r\n\ 5)\ set\ the\ the\ Headset\ as\ collected\r\n\ 6)\ Do\ a\ simple\ println(pid\ +\ the\ Headset).\r\n\ 7)\ check\ this\ -\ if\ all\ Headsets\ are\ processed\ (allGone()),\r\n\ \ then\ finished\ is\ true,\ else\ false.\r\n\ \ 8)\ Obtain\ an\ instance\ of\ the\ Log\ and\ write\ add\ entries\ for\ finished\ Headsets,\ \r\n\ \ with\ some\ useful\ info\ e.g.,\ Headset,\ pid,\ and\ something\ else.\r\n\ \ \r\n\ \ YOU\ ARE\ TO\ PERFORM\ UNIT\ TESTS\ FOR\ THIS\ METHOD\r\n
comment11.params=headset\ currentCust
comment11.target=double\ getTotalValue(Headset,\ CustInQueue)
comment11.text=\r\n\ This\ method\ is\ responsible\ for\ calculating\ the\ price\ according\ to\ the\ discounts\ available\r\n\ @return\ totalPrice\ after\ being\ calculated\r\n
comment2.params=
comment2.target=int\ getupdateQTY()
comment2.text=\r\n\ This\ method\ provides\ the\ updated\ quantity\r\n\ @return\ the\ updated\ quantity\ number\r\n
comment3.params=
comment3.target=CustInQueue\ getCurrentCust()
comment3.text=\r\n\ This\ method\ provides\ current\ order\r\n\ @return\ currentCust\ which\ is\ the\ current\ order\r\n
comment4.params=
comment4.target=int\ getNum()
comment4.text=\r\n\ This\ method\ provides\ the\ employee\ number\r\n\ @return\ numWorker\ which\ is\ the\ number\ of\ worker/employee\r\n
comment5.params=updateQTY
comment5.target=void\ setUpdateQTY(int)
comment5.text=\r\n\ This\ method\ sets\ the\ value\ of\ the\ updated\ quantity\ to\ the\ passed\ parameter\r\n\ @return\ nothing\r\n
comment6.params=
comment6.target=boolean\ getClosed()
comment6.text=\r\n\ this\ method\ is\ responsible\ to\ return\ the\ status\ of\ an\ order\ whether\ it's\ closed\ or\ opened\r\n\ @return\ true\ or\ false\ depending\ on\ whether\ Headset/order\ is\ processed\ or\ not\r\n
comment7.params=
comment7.target=void\ setClosed()
comment7.text=\r\n\ This\ method\ is\ responsible\ for\ closing\ the\ process\ of\ a\ Headset\r\n\ @return\ nothing\r\n
comment8.params=
comment8.target=boolean\ getFinished()
comment8.text=\r\n\ this\ method\ is\ responsible\ to\ return\ the\ status\ of\ an\ order\ whether\ it's\ finished\ or\ not\r\n\ @return\ true\ if\ processing\ order\ is\ finished,\ false\ otherwise\r\n
comment9.params=
comment9.target=CustInQueue\ getNext()
comment9.text=\r\n\ \r\n\ @return\ the\ next\ customer(order)\ in\ the\ Queue.\r\n\ add\ the\ next\ customer(order)\ in\ the\ queue\ to\ a\ log\r\n\ @return\ c\ which\ is\ refering\ to\ the\ next\ order.\r\n
numComments=12
