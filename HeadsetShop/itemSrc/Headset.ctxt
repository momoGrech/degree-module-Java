#BlueJ class context
comment0.target=Headset
comment0.text=\r\n\ This\ class\ is\ about\ a\ Headset\ that\ forms\ the\ order\ item\r\n\ @author\ (Mohammed\ Fuad\ Gurun)\r\n\ @version\ 1.0\r\n\ @since\ \ \ 14/12/2021\r\n
comment1.params=
comment1.target=Headset()
comment1.text=\r\n\ this\ method\ is\ an\ empty\ constructor\r\n
comment10.params=
comment10.target=boolean\ getCollected()
comment10.text=\r\n\ this\ method\ provides\ headset\ collection\r\n\ @return\ collected,\ this\ is\ the\ Headset\ collection\r\n
comment11.params=id
comment11.target=void\ setID(java.lang.String)
comment11.text=\r\n\ this\ method\ sets\ a\ value\ to\ headset\ ID\r\n\ @param\ is\ the\ headset\ ID\ in\ string\ format\r\n\ @return\ Nothing\r\n
comment12.params=brand
comment12.target=void\ setBrand(java.lang.String)
comment12.text=\r\n\ this\ method\ sets\ a\ value\ to\ headset\ brand\r\n\ @param\ is\ the\ headset\ brand\ in\ string\ format\r\n\ @return\ Nothing\r\n
comment13.params=model
comment13.target=void\ setModel(java.lang.String)
comment13.text=\r\n\ this\ method\ sets\ a\ value\ to\ headset\ model\r\n\ @param\ is\ the\ headset\ model\ in\ string\ format\r\n\ @return\ Nothing\r\n
comment14.params=price
comment14.target=void\ setPrice(double)
comment14.text=\r\n\ this\ method\ sets\ a\ value\ to\ headset\ price\r\n\ @param\ is\ the\ headset\ price\ in\ double\ format\r\n\ @return\ Nothing\r\n
comment15.params=quantity
comment15.target=void\ setQuantity(int)
comment15.text=\r\n\ this\ method\ sets\ a\ value\ to\ headset\ quantity\r\n\ @param\ is\ the\ headset\ quantity\ in\ integer\ format\r\n\ @return\ Nothing\r\n
comment16.params=inStock
comment16.target=void\ setInStock(boolean)
comment16.text=\r\n\ this\ method\ verifies\ the\ headset\ availability\r\n\ @param\ is\ the\ headset\ inStock\ in\ boolean\ format\r\n\ @return\ Nothing\r\n
comment17.params=collected
comment17.target=void\ setCollected(boolean)
comment17.text=\r\n\ this\ method\ verifies\ headset\ collection\r\n\ @param\ is\ the\ headset\ collected\ in\ boolean\ format\r\n\ @return\ Nothing\r\n
comment18.params=
comment18.target=boolean\ isCollected()
comment18.text=\r\n\ this\ method\ checks\ if\ an\ item\ is\ collected\r\n\ @return\ true/false\ based\ on\ colected\ value;\r\n
comment19.params=other
comment19.target=boolean\ equals(java.lang.Object)
comment19.text=\r\n\ Test\ for\ content\ equality\ between\ two\ objects.\r\n\ @param\ other\ The\ object\ to\ compare\ to\ this\ one.\r\n\ @return\ true\ if\ the\ argument\ object\ has\ same\ id\r\n\ logic\ for\ working\ this\ out\ is\ as\ follows\:\r\n\ 1)\ check\ whether\ formal\ local\ parameter\ other\ is\ an\ instance\ of\ Headset\r\n\ 2)\ declare\ an\ object\ reference\ to\ Headset,\ e.g.,\ otherItem,\ and\ coerce\ other\ to\ it\r\n\ 3)\ Return\ true\ if\ id\ is\ the\ same\ as\ otherItem.getId(),\ otherwise,\ false\r\n
comment2.params=id\ brand\ model\ price\ quantity
comment2.target=Headset(java.lang.String,\ java.lang.String,\ java.lang.String,\ double,\ int)
comment2.text=\r\n\ this\ method\ is\ an\ overloaded\ constructor\r\n\ @param\ id\ This\ parameter\ is\ referring\ to\ Headset\ ID\r\n\ @param\ brand\ This\ parameter\ is\ referring\ to\ Headset\ brand\r\n\ @param\ model\ This\ parameter\ is\ referring\ to\ Headset\ model\r\n\ @param\ price\ This\ parameter\ is\ referring\ to\ Headset\ price\r\n\ @param\ quantity\ This\ parameter\ is\ referring\ to\ Headset\ quantity\r\n
comment20.params=otherDetails
comment20.target=int\ compareTo(Headset)
comment20.text=\r\n\ We\ want\ to\ compare\ this\ object\ against\ another,\ for\ the\ purpose\r\n\ of\ sorting.\ The\ fields\ are\ compared\ by\ id.\r\n\ @param\ otherDetails\ -\ the\ object\ be\ compared\ against.\r\n\ @return\ a\ negative\ integer\ if\ this\ id\ comes\ before\ the\ parameter's\ id,\r\n\ \ \ \ \ \ \ \ \ zero\ if\ they\ are\ equal\ and\ a\ positive\ integer\ if\ this\r\n\ \ \ \ \ \ \ \ \ comes\ after\ the\ other.\r\n\ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ You\ are\ to\ complete\ this\ method\ appropriately\r\n
comment21.params=
comment21.target=java.lang.String\ toString()
comment21.text=\r\n\ this\ method\ returns\ a\ string\ containing\ the\ hgeadset\ atributes\r\n\ @return\ a\ string\ containing\ headset\ atributes\r\n
comment3.params=str
comment3.target=boolean\ validateHeadsetID(java.lang.String)
comment3.text=\r\n\ this\ method\ is\ handling\ ID\ validation\ for\ headset\r\n\ @param\ str\ This\ parameter\ is\ referring\ to\ Headset\ ID\ passed\ to\ this\ function\r\n\ @return\ true/false\ bsed\ on\ if\ the\ headset\ is\ valid\r\n
comment4.params=
comment4.target=java.lang.String\ getID()
comment4.text=\r\n\ this\ method\ provides\ headset\ ID\r\n\ @return\ id,\ this\ is\ the\ Headset\ ID\r\n
comment5.params=
comment5.target=java.lang.String\ getBrand()
comment5.text=\r\n\ this\ method\ provides\ headset\ brand\r\n\ @return\ brand,\ this\ is\ the\ Headset\ brand\r\n
comment6.params=
comment6.target=java.lang.String\ getModel()
comment6.text=\r\n\ this\ method\ provides\ headset\ model\r\n\ @return\ model,\ this\ is\ the\ Headset\ model\r\n
comment7.params=
comment7.target=double\ getPrice()
comment7.text=\r\n\ this\ method\ provides\ headset\ price\r\n\ @return\ price,\ this\ is\ the\ Headset\ price\r\n
comment8.params=
comment8.target=int\ getQuantity()
comment8.text=\r\n\ this\ method\ provides\ headset\ quantity\r\n\ @return\ quantity,\ this\ is\ the\ Headset\ quantity\r\n
comment9.params=
comment9.target=boolean\ getInStock()
comment9.text=\r\n\ this\ method\ provides\ headset\ availability\r\n\ @return\ instock,\ this\ is\ the\ Headset\ availability\r\n
numComments=22
